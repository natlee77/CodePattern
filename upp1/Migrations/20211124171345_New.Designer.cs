// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SOLID.Data;

namespace SOLID.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20211124171345_New")]
    partial class New
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SOLID.Models.Animal", b =>
                {
                    b.Property<int>("PetsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PetsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfAnimal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PetsId");

                    b.HasIndex("UserId");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("SOLID.Models.DayService", b =>
                {
                    b.Property<int>("ScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateGetIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateGetOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("PetsId")
                        .HasColumnType("int");

                    b.Property<double>("PricePerDag")
                        .HasColumnType("float");

                    b.HasKey("ScheduleID");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("PetsId");

                    b.ToTable("DayService");
                });

            modelBuilder.Entity("SOLID.Models.ExtraService", b =>
                {
                    b.Property<int>("ExtraServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("PetsId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ServicePrice")
                        .HasColumnType("float");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.HasKey("ExtraServiceId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("PetsId");

                    b.ToTable("ExtraService");
                });

            modelBuilder.Entity("SOLID.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Item")
                        .HasColumnType("int");

                    b.Property<double>("PricePerItem")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("UserId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("SOLID.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("SOLID.Models.Animal", b =>
                {
                    b.HasOne("SOLID.Models.User", "User")
                        .WithMany("Animals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SOLID.Models.DayService", b =>
                {
                    b.HasOne("SOLID.Models.Invoice", "Invoice")
                        .WithMany("SheduleItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SOLID.Models.Animal", "Animal")
                        .WithMany("Schedules")
                        .HasForeignKey("PetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("SOLID.Models.ExtraService", b =>
                {
                    b.HasOne("SOLID.Models.Invoice", "Invoice")
                        .WithMany("ExtraServicesItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SOLID.Models.Animal", "Animal")
                        .WithMany("ExtraServices")
                        .HasForeignKey("PetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("SOLID.Models.Invoice", b =>
                {
                    b.HasOne("SOLID.Models.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SOLID.Models.Animal", b =>
                {
                    b.Navigation("ExtraServices");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("SOLID.Models.Invoice", b =>
                {
                    b.Navigation("ExtraServicesItems");

                    b.Navigation("SheduleItems");
                });

            modelBuilder.Entity("SOLID.Models.User", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
